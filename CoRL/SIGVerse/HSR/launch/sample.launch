<launch>
	<arg name="sub_msg_to_robot_topic_name"       default="/interactive_cleanup/message/to_robot" />
	<arg name="pub_msg_to_moderator_topic_name"   default="/interactive_cleanup/message/to_moderator" />
	<arg name="pub_base_twist_topic_name"         default="/hsrb/opt_command_velocity" />
	<arg name="pub_arm_trajectory_topic_name"     default="/hsrb/arm_trajectory_controller/command" />
	<arg name="pub_gripper_trajectory_topic_name" default="/hsrb/gripper_trajectory_controller/command" />
	<arg name="rgbd_camera"                       default="head_rgbd_sensor" />
	<arg name="sub_laser_scan_topic_name"         default="/hsrb/base_scan" />
	<arg name="sigverse_ros_bridge_port"        default="50001" />
	<arg name="ros_bridge_port"                 default="9090" />
	<node name="interactive_cleanup_sample" pkg="interactive_cleanup" type="interactive_cleanup_sample" output="screen" launch-prefix="xterm -e">


		<param name="sub_msg_to_robot_topic_name"       type="string" value="$(arg sub_msg_to_robot_topic_name)" />
		<param name="pub_msg_to_moderator_topic_name"   type="string" value="$(arg pub_msg_to_moderator_topic_name)" />
		<param name="pub_base_twist_topic_name"         type="string" value="$(arg pub_base_twist_topic_name)" />
		<param name="pub_arm_trajectory_topic_name"     type="string" value="$(arg pub_arm_trajectory_topic_name)" />
		<param name="pub_gripper_trajectory_topic_name" type="string" value="$(arg pub_gripper_trajectory_topic_name)" />

	</node>

	<group ns="sigverse_ros_bridge">
		<node name="sigverse_ros_bridge" pkg="sigverse_ros_bridge" type="sigverse_ros_bridge" args="$(arg sigverse_ros_bridge_port)"/>
	</group>
	
	<include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" > 
		<arg name="port" value="$(arg ros_bridge_port)"/>
	</include>
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find interactive_cleanup)/launch/hsr.rviz"/>
<!-- Run the map server -->
 <arg name="map_file" default="$(find interactive_cleanup)/map/map.yaml"/>
 <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"/>

	  <arg name="use_map_topic" default="true"/>
	  <!--<arg name="scan_topic" default="scan" />-->
		
  <!-- amcl-->
	  <node pkg="amcl" type="amcl" name="amcl">
	    <param name="use_map_topic" value="$(arg use_map_topic)"/>
	    <!-- Publish scans from best pose at a max of 10 Hz -->
	    <param name="odom_model_type" value="diff"/>
	    <param name="odom_alpha5" value="0.1"/>
	    <param name="gui_publish_rate" value="10.0"/>
	    <param name="laser_max_beams" value="60"/>
	    <param name="laser_max_range" value="12.0"/>
	    <param name="min_particles" value="500"/>
	    <param name="max_particles" value="2000"/>
	    <param name="kld_err" value="0.05"/>
	    <param name="kld_z" value="0.99"/>
	    <param name="odom_alpha1" value="0.2"/>
	    <param name="odom_alpha2" value="0.2"/>
	    <!-- translation std dev, m -->
	    <param name="odom_alpha3" value="0.2"/>
	    <param name="odom_alpha4" value="0.2"/>
	    <param name="laser_z_hit" value="0.5"/>
	    <param name="laser_z_short" value="0.05"/>
	    <param name="laser_z_max" value="0.05"/>
	    <param name="laser_z_rand" value="0.5"/>
	    <param name="laser_sigma_hit" value="0.2"/>
	    <param name="laser_lambda_short" value="0.1"/>
	    <param name="laser_model_type" value="likelihood_field"/>
	    <!-- <param name="laser_model_type" value="beam"/> -->
	    <param name="laser_likelihood_max_dist" value="2.0"/>
	    <param name="update_min_d" value="0.25"/>
	    <param name="update_min_a" value="0.2"/>
	    <param name="odom_frame_id" value="odom"/>
	    <param name="resample_interval" value="1"/>
	    <!-- Increase tolerance because the computer can get quite busy -->
	    <param name="transform_tolerance" value="1.0"/>
	    <param name="recovery_alpha_slow" value="0.0"/>
	    <param name="recovery_alpha_fast" value="0.0"/>
	    <!--<remap from="scan" to="$(arg scan_topic)"/>-->
			<remap from="scan" to="$(arg sub_laser_scan_topic_name)"/>
	  </node>



<!--move_base-->
	<arg name="no_static_map" default="false"/>
  <arg name="base_global_planner" default="navfn/NavfnROS"/>
  <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>
  <!-- <arg name="base_local_planner" default="base_local_planner/TrajectoryPlannerROS"/> -->

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
		<param name="pub_base_twist_topic_name"         type="string" value="$(arg pub_base_twist_topic_name)" />
    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>
    <rosparam file="$(find interactive_cleanup)/config/planner.yaml" command="load"/>

    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find interactive_cleanup)/config/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find interactive_cleanup)/config/costmap_common.yaml" command="load" ns="local_costmap" />

    <!-- local costmap, needs size -->
    <rosparam file="$(find interactive_cleanup)/config/costmap_local.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="10.0"/>
    <param name="local_costmap/height" value="10.0"/>

    <!-- static global costmap, static map provides size -->
    <rosparam file="$(find interactive_cleanup)/config/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>

    <!-- global costmap with laser, for odom_navigation_demo -->
    <rosparam file="$(find interactive_cleanup)/config/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>

	</node>
	<group ns="hsrb">
		<include file="$(find realsense_camera)/launch/r200_nodelet_rgbd.launch">
			<arg name="camera"      value="$(arg rgbd_camera)"/>
			<arg name="load_driver" value="false"/>
		</include>
	</group>

</launch>

